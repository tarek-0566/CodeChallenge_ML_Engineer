name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci-cd-pipeline:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Linting with flake8
      - name: Run flake8 for linting
        run: |
          pip install flake8
          flake8 flask_api.py

      # Step 5: Run tests with pytest
      - name: Run pytest for unit and integration tests
        run: |
          pip install pytest
          pytest tests/

      # Step 6: Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Step 7: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t flask-sentence-transformer .

      # Step 8: Run and validate Docker container
      - name: Run and test Docker container
        run: |
          # Stop and remove any existing container
          if docker ps -a --format '{{.Names}}' | grep -q "flask-container"; then
            docker stop flask-container
            docker rm flask-container
          fi

          # Run the container
          docker run -d -p 8000:8000 --name flask-container flask-sentence-transformer

          # Wait for the container to initialize
          sleep 30

          # Check container status
          docker ps

          # Test the health endpoint
          curl http://localhost:8000/health || {
            echo "Health check failed. Checking logs...";
            docker logs flask-container;
            exit 1;
          }

          # Cleanup
          docker stop flask-container
          docker rm flask-container

      # Optional: Cleanup dangling Docker images and containers
      - name: Cleanup Docker
        run: |
          docker system prune -f
